DROP DATABASE IF EXISTS UNIVERSITY;
CREATE DATABASE UNIVERSITY;
USE UNIVERSITY;

CREATE TABLE IF NOT EXISTS APPLICANT (ID INT UNSIGNED auto_increment NOT NULL PRIMARY KEY,
LASTNAME VARCHAR(45) NOT NULL, FIRSTNAME VARCHAR(45) NOT NULL, SECONDNAME VARCHAR(45), 
BIRTHDAY DATE NOT NULL, PASSPORT VARCHAR(45) UNIQUE, DIPLOMA VARCHAR(45) UNIQUE);

CREATE TABLE IF NOT EXISTS EGE (APP_ID INT UNSIGNED NOT NULL PRIMARY KEY,
RUSSIAN SMALLINT NOT NULL CHECK (RUSSIAN >= 0 & RUSSIAN <= 100), MATH SMALLINT NOT NULL CHECK (MATH >= 0 & MATH <=100),
CHEMISTRY SMALLINT CHECK (CHEMISTRY >= 0 & CHEMISTRY <= 100) DEFAULT 0, 
INFORMATICS SMALLINT CHECK (INFORMATICS >= 0 & INFORMATICS <= 100) DEFAULT 0,
PHYSICS SMALLINT CHECK (PHYSICS >= 0 & PHYSICS <= 100) DEFAULT 0, 
CONSTRAINT FOREIGN KEY FkEgeID (APP_ID) REFERENCES APPLICANT(ID));

CREATE TABLE IF NOT EXISTS OLYMPIADA (APP_ID INT UNSIGNED NOT NULL, NAME VARCHAR(100) NOT NULL, 
SUBJECT VARCHAR(15) NOT NULL, CHECK (SUBJECT IN ('RUSSIAN', 'MATH', 'CHEMISTRY', 'INFORMATICS', 'PHYSICS')), 
STATUS BOOLEAN NOT NULL, CONSTRAINT PRIMARY KEY PkOl (APP_ID, NAME, SUBJECT));

CREATE TABLE IF NOT EXISTS COURSE (ID INT UNSIGNED auto_increment NOT NULL PRIMARY KEY, 
COURSE_NAME VARCHAR(100) NOT NULL, SUBJECT VARCHAR(15) NOT NULL, CHECK (SUBJECT IN ('CHEMISTRY', 'INFORMATICS', 'PHYSICS')),
CAPACITY SMALLINT UNSIGNED NOT NULL);

CREATE TABLE IF NOT EXISTS APP_REQUEST (APP_ID INT UNSIGNED NOT NULL, COURSE_ID INT UNSIGNED NOT NULL, 
CONSTRAINT PRIMARY KEY PkAR (APP_ID, COURSE_ID), CONSTRAINT FOREIGN KEY FkARA (APP_ID) REFERENCES APPLICANT(ID), 
CONSTRAINT FOREIGN KEY FkARC (COURSE_ID) REFERENCES COURSE(ID));

CREATE VIEW olymp_scores AS 
SELECT e.APP_ID, 	
CASE
	WHEN (o.STATUS = 0 & o.SUBJECT = 'RUSSIAN') | o.STATUS = 1
    THEN 100
    ELSE e.RUSSIAN
END RUSSIAN, 
CASE
	WHEN (o.STATUS = 0 & o.SUBJECT = 'MATH') | o.STATUS = 1
    THEN 100
    ELSE e.MATH
END MATH,
CASE
	WHEN (o.STATUS = 0 & o.SUBJECT = 'CHEMISTRY') | o.STATUS = 1
    THEN 100
    ELSE e.CHEMISTRY
END CHEMISTRY,
CASE
	WHEN (o.STATUS = 0 & o.SUBJECT = 'INFORMATICS') | o.STATUS = 1
    THEN 100
    ELSE e.INFORMATICS
END INFORMATICS,
CASE
	WHEN (o.STATUS = 0 & o.SUBJECT = 'PHYSICS') | o.STATUS = 1
    THEN 100
    ELSE e.PHYSICS
END PHYSICS
FROM EGE e LEFT OUTER JOIN OLYMPIADA o ON e.APP_ID = o.APP_ID;

CREATE VIEW sum_scores AS
SELECT APP_ID, 
CASE 
	WHEN (RUSSIAN > 34) & (MATH > 34) & (CHEMISTRY > 34)
    THEN (RUSSIAN + MATH + CHEMISTRY)
    ELSE 0
END CHEMISTRY_COURSE, 
CASE 
	WHEN (RUSSIAN > 34) & (MATH > 34) & (INFORMATICS > 34)
    THEN (RUSSIAN + MATH + INFORMATICS)
    ELSE 0
END INFORMATICS_COURSE, 
CASE 
	WHEN (RUSSIAN > 34) & (MATH > 34) & (PHYSICS > 34)
    THEN (RUSSIAN + MATH + PHYSICS)
    ELSE 0
END PHYSICS_COURSE
FROM olymp_scores;
